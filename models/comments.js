const cleanCommentRelationship = require('../utils/clean-comments-relationship');

// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Comments = sequelize.define('comments', {
    commentableResource: {
      type: DataTypes.ENUM(
        'picture',
        'post',
      ),
    },
    commentableId: {
      type: DataTypes.INTEGER,
    },
    comment: {
      type: DataTypes.STRING,
    },
  }, {
    tableName: 'comments',
    timestamps: false,
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  Comments.addHook("afterFind", findResult => {
    if (!Array.isArray(findResult)) findResult = [findResult];
    for (const instance of findResult) {
      cleanCommentRelationship(instance);
    }
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Comments.associate = (models) => {
    Comments.belongsTo(models.pictures, {
      foreignKey: 'commentableId',
      constraints: false
    });

    Comments.belongsTo(models.posts, {
      foreignKey: 'commentableId',
      constraints: false
    });
  };

  return Comments;
};
