const cleanCommentRelationship = require('../utils/clean-comments-relationship');

// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Pictures = sequelize.define('pictures', {
    url: {
      type: DataTypes.STRING,
    },
  }, {
    tableName: 'pictures',
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Pictures.associate = (models) => {
    Pictures.hasMany(models.comments, {
      foreignKey: {
        name: 'commentableId',
        field: 'commentable_id',
      },
      constraints: false,
      scope: {
        commentableResource: 'picture'
      },
      as: 'comments',
    });
  };

  Pictures.addHook("afterFind", findResult => {
    if (!Array.isArray(findResult)) findResult = [findResult];

    for (const instance of findResult) {
      if (instance.comments) {
        for (const comment of instance.comments) {
          cleanCommentRelationship(comment);
        }
      }
    }
  });

  return Pictures;
};
